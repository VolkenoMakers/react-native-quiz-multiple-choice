import React from 'react';
import { StyleProp, ViewStyle } from 'react-native';
import { Theme } from '../config/theme';
export declare type CardProps = {
    containerStyle?: StyleProp<ViewStyle>;
    wrapperStyle?: StyleProp<ViewStyle>;
    theme?: Theme;
};
interface Card extends React.FunctionComponent<CardProps> {
}
declare const Card: Card;
export { Card };
declare const ThemedCard: (React.FunctionComponent<Omit<CardProps, keyof import("../config/ThemeProvider").ThemeProps<T>>> | React.ForwardRefExoticComponent<CardProps>) & {
    Divider: React.FunctionComponent<Omit<import("react-native").ViewProps & {
        style?: object | any[];
        theme?: Partial<import("../config").FullTheme>;
    }, keyof import("../config/ThemeProvider").ThemeProps<T>>> | React.ForwardRefExoticComponent<import("react-native").ViewProps & {
        style?: object | any[];
        theme?: Partial<import("../config").FullTheme>;
    }>;
    Image: React.FunctionComponent<Omit<import("react-native").ImageProps & {
        Component?: typeof React.Component;
        onPress?(): void;
        onLongPress?(): void;
        ImageComponent?: React.ComponentType<any>;
        PlaceholderContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>>;
        containerStyle?: StyleProp<ViewStyle>;
        placeholderStyle?: StyleProp<ViewStyle>;
        transition?: boolean;
        transitionDuration?: number;
    }, keyof import("../config/ThemeProvider").ThemeProps<T>>> | React.ForwardRefExoticComponent<import("react-native").ImageProps & {
        Component?: typeof React.Component;
        onPress?(): void;
        onLongPress?(): void;
        ImageComponent?: React.ComponentType<any>;
        PlaceholderContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>>;
        containerStyle?: StyleProp<ViewStyle>;
        placeholderStyle?: StyleProp<ViewStyle>;
        transition?: boolean;
        transitionDuration?: number;
    }>;
    Title: React.FunctionComponent<Omit<import("react-native").TextProps & {
        style?: StyleProp<import("react-native").TextStyle>;
        h1?: boolean;
        h2?: boolean;
        h3?: boolean;
        h4?: boolean;
        h1Style?: StyleProp<import("react-native").TextStyle>;
        h2Style?: StyleProp<import("react-native").TextStyle>;
        h3Style?: StyleProp<import("react-native").TextStyle>;
        h4Style?: StyleProp<import("react-native").TextStyle>;
        theme?: Partial<import("../config").FullTheme>;
    }, keyof import("../config/ThemeProvider").ThemeProps<T>>> | React.ForwardRefExoticComponent<import("react-native").TextProps & {
        style?: StyleProp<import("react-native").TextStyle>;
        h1?: boolean;
        h2?: boolean;
        h3?: boolean;
        h4?: boolean;
        h1Style?: StyleProp<import("react-native").TextStyle>;
        h2Style?: StyleProp<import("react-native").TextStyle>;
        h3Style?: StyleProp<import("react-native").TextStyle>;
        h4Style?: StyleProp<import("react-native").TextStyle>;
        theme?: Partial<import("../config").FullTheme>;
    }>;
    FeaturedTitle: React.FunctionComponent<Omit<import("react-native").TextProps & {
        style?: StyleProp<import("react-native").TextStyle>;
        h1?: boolean;
        h2?: boolean;
        h3?: boolean;
        h4?: boolean;
        h1Style?: StyleProp<import("react-native").TextStyle>;
        h2Style?: StyleProp<import("react-native").TextStyle>;
        h3Style?: StyleProp<import("react-native").TextStyle>;
        h4Style?: StyleProp<import("react-native").TextStyle>;
        theme?: Partial<import("../config").FullTheme>;
    }, keyof import("../config/ThemeProvider").ThemeProps<T>>> | React.ForwardRefExoticComponent<import("react-native").TextProps & {
        style?: StyleProp<import("react-native").TextStyle>;
        h1?: boolean;
        h2?: boolean;
        h3?: boolean;
        h4?: boolean;
        h1Style?: StyleProp<import("react-native").TextStyle>;
        h2Style?: StyleProp<import("react-native").TextStyle>;
        h3Style?: StyleProp<import("react-native").TextStyle>;
        h4Style?: StyleProp<import("react-native").TextStyle>;
        theme?: Partial<import("../config").FullTheme>;
    }>;
    FeaturedSubtitle: React.FunctionComponent<Omit<import("react-native").TextProps & {
        style?: StyleProp<import("react-native").TextStyle>;
        h1?: boolean;
        h2?: boolean;
        h3?: boolean;
        h4?: boolean;
        h1Style?: StyleProp<import("react-native").TextStyle>;
        h2Style?: StyleProp<import("react-native").TextStyle>;
        h3Style?: StyleProp<import("react-native").TextStyle>;
        h4Style?: StyleProp<import("react-native").TextStyle>;
        theme?: Partial<import("../config").FullTheme>;
    }, keyof import("../config/ThemeProvider").ThemeProps<T>>> | React.ForwardRefExoticComponent<import("react-native").TextProps & {
        style?: StyleProp<import("react-native").TextStyle>;
        h1?: boolean;
        h2?: boolean;
        h3?: boolean;
        h4?: boolean;
        h1Style?: StyleProp<import("react-native").TextStyle>;
        h2Style?: StyleProp<import("react-native").TextStyle>;
        h3Style?: StyleProp<import("react-native").TextStyle>;
        h4Style?: StyleProp<import("react-native").TextStyle>;
        theme?: Partial<import("../config").FullTheme>;
    }>;
};
export default ThemedCard;
