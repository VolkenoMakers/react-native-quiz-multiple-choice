import React from 'react';
import { Animated, ViewStyle, StyleProp, TextStyle, TextInputProps } from 'react-native';
import { Theme } from '../config/theme';
export declare type InputProps = TextInputProps & {
    containerStyle?: StyleProp<ViewStyle>;
    disabled?: boolean;
    disabledInputStyle?: StyleProp<TextStyle>;
    inputContainerStyle?: StyleProp<ViewStyle>;
    leftIcon?: any;
    leftIconContainerStyle?: StyleProp<ViewStyle>;
    rightIcon?: any;
    rightIconContainerStyle?: StyleProp<ViewStyle>;
    inputStyle?: object | any[];
    InputComponent?: typeof React.Component;
    errorProps?: object;
    errorStyle?: object | any[];
    errorMessage?: string;
    label?: React.ReactNode;
    labelStyle?: object | any[];
    labelProps?: object;
    theme?: Theme;
    renderErrorMessage?: boolean;
};
declare class Input extends React.Component<InputProps> {
    input: any;
    shakeAnimationValue: Animated.Value;
    focus(): void;
    blur(): void;
    clear(): void;
    isFocused(): boolean;
    setNativeProps(nativeProps: Partial<TextInputProps>): void;
    shake: () => void;
    render(): JSX.Element;
}
export { Input };
declare const _default: React.FunctionComponent<Omit<TextInputProps & {
    containerStyle?: StyleProp<ViewStyle>;
    disabled?: boolean;
    disabledInputStyle?: StyleProp<TextStyle>;
    inputContainerStyle?: StyleProp<ViewStyle>;
    leftIcon?: any;
    leftIconContainerStyle?: StyleProp<ViewStyle>;
    rightIcon?: any;
    rightIconContainerStyle?: StyleProp<ViewStyle>;
    inputStyle?: object | any[];
    InputComponent?: typeof React.Component;
    errorProps?: object;
    errorStyle?: object | any[];
    errorMessage?: string;
    label?: React.ReactNode;
    labelStyle?: object | any[];
    labelProps?: object;
    theme?: Partial<import("../config").FullTheme>;
    renderErrorMessage?: boolean;
}, keyof import("../config/ThemeProvider").ThemeProps<T>>> | React.ForwardRefExoticComponent<TextInputProps & {
    containerStyle?: StyleProp<ViewStyle>;
    disabled?: boolean;
    disabledInputStyle?: StyleProp<TextStyle>;
    inputContainerStyle?: StyleProp<ViewStyle>;
    leftIcon?: any;
    leftIconContainerStyle?: StyleProp<ViewStyle>;
    rightIcon?: any;
    rightIconContainerStyle?: StyleProp<ViewStyle>;
    inputStyle?: object | any[];
    InputComponent?: typeof React.Component;
    errorProps?: object;
    errorStyle?: object | any[];
    errorMessage?: string;
    label?: React.ReactNode;
    labelStyle?: object | any[];
    labelProps?: object;
    theme?: Partial<import("../config").FullTheme>;
    renderErrorMessage?: boolean;
}>;
export default _default;
